package com.learnbyheart.activity;

import org.w3c.dom.Document;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;
import android.widget.Toast;

import com.learnbyheart.GLOBAL;
import com.learnbyheart.R;

public class MainActivity extends ActionBarActivity implements
android.view.View.OnClickListener {

	private ImageButton ibDictionary;
	private SharedPreferences sharedPreferences;
	private final String MY_PREFERENCES = GLOBAL.MyPREFERENCES;
	
	private ProgressDialog progress;
	private Document mainDoc;
	private String urlStr;
	private List<Language> languageList;
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        ibDictionary = (ImageButton) findViewById(R.id.ibOpenActivityDictionary);
		ibDictionary.setOnClickListener((OnClickListener) this);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int itemId = item.getItemId();
        switch (itemId) {
		case R.id.action_logout:
			Editor sharedPreferencesEditor = sharedPreferences.edit();
			sharedPreferencesEditor.remove(GLOBAL.USER_LOGGED_SESSION);
			sharedPreferencesEditor.apply();
        	Intent i = new Intent("android.intent.action.login");
			startActivity(i);
			break;
			
		case R.id.action_synchronize:
			// getting available languages
			progress = new ProgressDialog(this);
			progress.setMessage("accessing the cloud");
			progress.setTitle("wait");
			// progress.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
			progress.setProgressStyle(ProgressDialog.STYLE_SPINNER);
			progress.setCancelable(true);
			progress.setProgress(0);
			progress.show();
			
			urlStr = GLOBAL.urlGetLanguages(sharedPreferences.getString(GLOBAL.USER_LOGGED_SESSION, "-1"));

			new Thread(new Runnable() {
				@Override
				public void run() {
					Log.e("url", urlStr);
					doLongTask();

					runOnUiThread(new Runnable() {
						@Override
						public void run() {
							progress.dismiss();
							Log.v("taskdone", "==== taskdone");

							// if userSession = null, then httpConnection failed
							if(userSession == null){
								 Toast.makeText(getApplicationContext(), "Login Failed", Toast.LENGTH_LONG).show();
							}else{
								Log.e("Session userSession", userSession);
								SharedPreferences sharedPreferences = getSharedPreferences(MyPREFERENCES, Context.MODE_PRIVATE);
								Editor sharedPreferencesEditor = sharedPreferences.edit();
								sharedPreferencesEditor.putString(GLOBAL.USER_LOGGED_SESSION, userSession);
								sharedPreferencesEditor.putLong(GLOBAL.USER_LOGGED_ID, userId);
								Log.e("teste", userSession);
								sharedPreferencesEditor.apply();
								finish();
							}
						}
					});
				}
			}).start();
			// end getting available languages
			break;

		default:
			break;
		}
        
        return true;
    }
    
	@Override
	public void onClick(View v) {
		int id = v.getId();
		if (id == R.id.ibOpenActivityDictionary) {
			Intent i = new Intent("android.intent.action.dictionary");
			startActivity(i);
		}
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		
		// VERIFY LOGGED USER
		sharedPreferences = getSharedPreferences(MY_PREFERENCES, Context.MODE_PRIVATE);
		// IF is logged
		if (!(sharedPreferences.contains(GLOBAL.USER_LOGGED_SESSION) && (sharedPreferences.getString(GLOBAL.USER_LOGGED_SESSION, "-1")!="-1"))){

			// IF has opened the login activity once
			if ((sharedPreferences.contains(GLOBAL.hasOpenedLoginActivity) && (sharedPreferences.getBoolean(GLOBAL.hasOpenedLoginActivity, false)))){
				Editor sharedPreferencesEditor = sharedPreferences.edit();
				sharedPreferencesEditor.putBoolean(GLOBAL.hasOpenedLoginActivity, false);
				sharedPreferencesEditor.apply();
				Log.e("fechou", "fechou");
				finish();
			}else{
				Editor sharedPreferencesEditor = sharedPreferences.edit();
				sharedPreferencesEditor.putBoolean(GLOBAL.hasOpenedLoginActivity, true);
				sharedPreferencesEditor.apply();
				Intent i = new Intent("android.intent.action.login");
				startActivity(i);	
				Log.e("abriu", "abriu");
				
			}
			
		}
		// END VERIFY LOGGED USER
	}

}
