package com.learnbyheart.greenDao.gen.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import com.learnbyheart.greenDao.gen.bean.Dictionary;
import com.learnbyheart.greenDao.gen.bean.Example;
import com.learnbyheart.greenDao.gen.bean.Language;
import com.learnbyheart.greenDao.gen.bean.LogExampleNotification;
import com.learnbyheart.greenDao.gen.bean.Meaning;
import com.learnbyheart.greenDao.gen.bean.Notification;
import com.learnbyheart.greenDao.gen.bean.User;
import com.learnbyheart.greenDao.gen.bean.UserType;
import com.learnbyheart.greenDao.gen.bean.Word;
import com.learnbyheart.greenDao.gen.dao.DictionaryDao;
import com.learnbyheart.greenDao.gen.dao.ExampleDao;
import com.learnbyheart.greenDao.gen.dao.LanguageDao;
import com.learnbyheart.greenDao.gen.dao.LogExampleNotificationDao;
import com.learnbyheart.greenDao.gen.dao.MeaningDao;
import com.learnbyheart.greenDao.gen.dao.NotificationDao;
import com.learnbyheart.greenDao.gen.dao.UserDao;
import com.learnbyheart.greenDao.gen.dao.UserTypeDao;
import com.learnbyheart.greenDao.gen.dao.WordDao;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;



// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userTypeDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig languageDaoConfig;
    private final DaoConfig dictionaryDaoConfig;
    private final DaoConfig wordDaoConfig;
    private final DaoConfig meaningDaoConfig;
    private final DaoConfig exampleDaoConfig;
    private final DaoConfig notificationDaoConfig;
    private final DaoConfig logExampleNotificationDaoConfig;

    private final UserTypeDao userTypeDao;
    private final UserDao userDao;
    private final LanguageDao languageDao;
    private final DictionaryDao dictionaryDao;
    private final WordDao wordDao;
    private final MeaningDao meaningDao;
    private final ExampleDao exampleDao;
    private final NotificationDao notificationDao;
    private final LogExampleNotificationDao logExampleNotificationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userTypeDaoConfig = daoConfigMap.get(UserTypeDao.class).clone();
        userTypeDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        languageDaoConfig = daoConfigMap.get(LanguageDao.class).clone();
        languageDaoConfig.initIdentityScope(type);

        dictionaryDaoConfig = daoConfigMap.get(DictionaryDao.class).clone();
        dictionaryDaoConfig.initIdentityScope(type);

        wordDaoConfig = daoConfigMap.get(WordDao.class).clone();
        wordDaoConfig.initIdentityScope(type);

        meaningDaoConfig = daoConfigMap.get(MeaningDao.class).clone();
        meaningDaoConfig.initIdentityScope(type);

        exampleDaoConfig = daoConfigMap.get(ExampleDao.class).clone();
        exampleDaoConfig.initIdentityScope(type);

        notificationDaoConfig = daoConfigMap.get(NotificationDao.class).clone();
        notificationDaoConfig.initIdentityScope(type);

        logExampleNotificationDaoConfig = daoConfigMap.get(LogExampleNotificationDao.class).clone();
        logExampleNotificationDaoConfig.initIdentityScope(type);

        userTypeDao = new UserTypeDao(userTypeDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        languageDao = new LanguageDao(languageDaoConfig, this);
        dictionaryDao = new DictionaryDao(dictionaryDaoConfig, this);
        wordDao = new WordDao(wordDaoConfig, this);
        meaningDao = new MeaningDao(meaningDaoConfig, this);
        exampleDao = new ExampleDao(exampleDaoConfig, this);
        notificationDao = new NotificationDao(notificationDaoConfig, this);
        logExampleNotificationDao = new LogExampleNotificationDao(logExampleNotificationDaoConfig, this);

        registerDao(UserType.class, userTypeDao);
        registerDao(User.class, userDao);
        registerDao(Language.class, languageDao);
        registerDao(Dictionary.class, dictionaryDao);
        registerDao(Word.class, wordDao);
        registerDao(Meaning.class, meaningDao);
        registerDao(Example.class, exampleDao);
        registerDao(Notification.class, notificationDao);
        registerDao(LogExampleNotification.class, logExampleNotificationDao);
    }
    
    public void clear() {
        userTypeDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        languageDaoConfig.getIdentityScope().clear();
        dictionaryDaoConfig.getIdentityScope().clear();
        wordDaoConfig.getIdentityScope().clear();
        meaningDaoConfig.getIdentityScope().clear();
        exampleDaoConfig.getIdentityScope().clear();
        notificationDaoConfig.getIdentityScope().clear();
        logExampleNotificationDaoConfig.getIdentityScope().clear();
    }

    public UserTypeDao getUserTypeDao() {
        return userTypeDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public LanguageDao getLanguageDao() {
        return languageDao;
    }

    public DictionaryDao getDictionaryDao() {
        return dictionaryDao;
    }

    public WordDao getWordDao() {
        return wordDao;
    }

    public MeaningDao getMeaningDao() {
        return meaningDao;
    }

    public ExampleDao getExampleDao() {
        return exampleDao;
    }

    public NotificationDao getNotificationDao() {
        return notificationDao;
    }

    public LogExampleNotificationDao getLogExampleNotificationDao() {
        return logExampleNotificationDao;
    }

}
